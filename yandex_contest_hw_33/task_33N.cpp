/*
 У каждого спортсмена на футболке написан уникальный номер. Спортсмены по очереди выходят из раздевалки и должны
 построиться на стадионе. Тренер каждому выходящему спортсмену называет номер. Выходящий спортсмен должен встать
 после спортсмена с таким номером на футболке (а если такого спортсмена на поле нет — встать в начало).

 Формат ввода
 Сначала задано натуральное число n, не превосходящее 100000 — количество спортсменов. Далее идут n пар неотрицательных
 целых чисел, не превосходящих 100000. Первое число в паре — номер очередного выходящего спортсмена. Второе число в паре
 — номер того спортсмена, после которого текущий должен встать.

 Формат вывода
 Напечатайте номера спорстменов после построения.

 Примечания
 Решение с линейным поиском нужного места не пройдёт по времени. Используйте вспомогательную структуру данных, чтобы
 быстро находить то место, в которое нужно встать.
*/

#include <iostream>
#include <string_view>
#include <vector>
#include <algorithm>
#include <list>
#include <optional>

using namespace std;

int main33N() {
    vector<optional<list<size_t>::iterator>> Check(100000);
    list<size_t> res;
    int n;

    cin >> n;
    for (int i = 0; i < n; ++i) {
        int num, next;
        cin >> num >> next;
        if(Check[next]) {
            res.insert(*Check[next], num);
            Check[num] = prev(*Check[next]);
        } else {
            res.push_back(num);
            Check[num] = prev(res.end());
        }
    }

    res.reverse();

    for (auto x: res) {
        cout << x << "\n";
    }
    cout << endl;
    return 0;
}